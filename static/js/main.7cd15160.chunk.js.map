{"version":3,"sources":["images/github.png","components/nav.js","components/header.js","components/search.js","components/info.js","components/toggle.js","components/widget.js","components/body.js","App.js","index.js"],"names":["module","exports","Nav","className","href","src","logo","alt","Header","Search","search","onChange","onSubmit","value","placeholder","Info","unit","weather","checked","id","icon","main","description","name","sys","country","temp","feels_like","humidity","Toggle","onToggle","type","Widget","Body","client","createClient","process","App","useState","setSearch","setWeather","city","setCity","setUnit","setChecked","url","useEffect","Axios","get","then","response","data","query","photos","per_page","length","window","matchMedia","matches","document","getElementById","style","backgroundImage","portrait","landscape","event","target","preventDefault","x","split","join","ReactDOM","render"],"mappings":"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","file":"static/js/main.7cd15160.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.a9e8c397.png\";","import React from \"react\";\r\nimport logo from \"../images/github.png\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark justify-content-between\">\r\n      <h1 className=\"navbar-brand\">Weather</h1>\r\n      <a href=\"https://chaitanya-raj.github.io\" className=\" mr-sm-2\">\r\n        <img src={logo} alt=\"github\" />\r\n      </a>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Nav from \"./nav\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Nav />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ search, onChange, onSubmit }) => {\r\n  return (\r\n    <div className=\"search container\">\r\n      <div className=\"d-flex justify-content-center\">\r\n        <form className=\"searchbar\" onSubmit={onSubmit}>\r\n          <input\r\n            className=\"search_input\"\r\n            value={search}\r\n            onChange={onChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n          <button className=\"search_icon\">\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst Info = ({ weather, checked }) => {\r\n  if (weather) {\r\n    let unit;\r\n    if (checked) unit = \"F\";\r\n    else unit = \"C\";\r\n    return (\r\n      <div id=\"info\">\r\n        <div id=\"icon\">\r\n          <img\r\n            src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n            alt={weather.weather[0].main}\r\n          />\r\n          <p>{weather.weather[0].description}</p>\r\n        </div>\r\n        <div id=\"loc\">\r\n          {weather.name}\r\n          <sup>{weather.sys.country}</sup>\r\n        </div>\r\n        <div id=\"temp\">\r\n          <p>\r\n            Temperature: {weather.main.temp}&#176;{unit}\r\n          </p>\r\n          <p>\r\n            Feels like: {weather.main.feels_like}&#176;{unit}\r\n          </p>\r\n          <p>Humidity: {weather.main.humidity} %</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else\r\n    return (\r\n      <div>\r\n        <i className=\"fa fa-refresh fa-spin\" id=\"loading\"></i>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\n\r\nconst Toggle = ({ checked, onToggle }) => {\r\n  return (\r\n    <div id=\"switch-box\">\r\n      <label className=\"switch\">\r\n        <input type=\"checkbox\" checked={checked} onChange={onToggle} />\r\n        <span className=\"slider round\"></span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toggle;\r\n","import React from \"react\";\r\nimport Search from \"./search\";\r\nimport Info from \"./info\";\r\nimport Toggle from \"./toggle\";\r\n\r\nconst Widget = ({ search, onChange, onSubmit, checked, onToggle, weather }) => {\r\n  return (\r\n    <div id=\"widget\">\r\n      <Search search={search} onChange={onChange} onSubmit={onSubmit} />\r\n      <Info weather={weather} checked={checked} />\r\n      <Toggle checked={checked} onToggle={onToggle} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React from \"react\";\r\nimport Widget from \"./widget\";\r\n\r\nconst Body = ({ search, onChange, onSubmit, checked, onToggle, weather }) => {\r\n  return (\r\n    <main id=\"body\">\r\n      <Widget\r\n        search={search}\r\n        onChange={onChange}\r\n        onSubmit={onSubmit}\r\n        checked={checked}\r\n        onToggle={onToggle}\r\n        weather={weather}\r\n      />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { createClient } from \"pexels\";\r\nimport Axios from \"axios\";\r\nimport Header from \"./components/header\";\r\nimport Body from \"./components/body\";\r\nimport \"./App.css\";\r\n\r\nconst PHOTOS_API_KEY = process.env.REACT_APP_PHOTOS_API_KEY;\r\nconst client = createClient(PHOTOS_API_KEY);\r\n\r\nconst WEATHER_API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [weather, setWeather] = useState();\r\n  const [city, setCity] = useState(\"new delhi\");\r\n  const [unit, setUnit] = useState(\"metric\");\r\n  const [checked, setChecked] = useState(false);\r\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=${WEATHER_API_KEY}`;\r\n\r\n  useEffect(() => {\r\n    Axios.get(url).then((response) => {\r\n      setWeather(response.data);\r\n      // console.log(response.data);\r\n    });\r\n  }, [city, unit, url]);\r\n\r\n  useEffect(() => {\r\n    if (weather) {\r\n      let query = weather.name;\r\n      if (query) {\r\n        client.photos.search({ query, per_page: 1 }).then((response) => {\r\n          // console.log(response);\r\n          if (response.photos.length !== 0) {\r\n            if (window.matchMedia(\"(max-width: 768px)\").matches)\r\n              document.getElementById(\r\n                \"body\"\r\n              ).style.backgroundImage = `url(${response.photos[0].src.portrait})`;\r\n            else\r\n              document.getElementById(\r\n                \"body\"\r\n              ).style.backgroundImage = `url(${response.photos[0].src.landscape})`;\r\n          }\r\n          // console.log(query);\r\n        });\r\n      }\r\n    }\r\n  }, [weather]);\r\n\r\n  const onSearchChange = (event) => {\r\n    setSearch(event.target.value);\r\n    // console.log(event.target.value);\r\n  };\r\n\r\n  const onToggle = (event) => {\r\n    setChecked(!checked);\r\n    // console.log(!checked);\r\n    if (!checked) setUnit(\"imperial\");\r\n    else setUnit(\"metric\");\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    // console.log(search);\r\n    let x = search.split(\" \").join(\"%20\");\r\n    setCity(x);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Body\r\n        search={search}\r\n        onChange={onSearchChange}\r\n        onSubmit={onSubmit}\r\n        checked={checked}\r\n        onToggle={onToggle}\r\n        weather={weather}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}